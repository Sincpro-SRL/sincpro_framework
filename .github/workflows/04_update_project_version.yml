name: Update project version

on:
  workflow_run:
    workflows:
      - Release draft
    types:
      - completed

jobs:

  update_project_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get latest release version
        id: get-latest-release
        uses: actions/github-script@v6
        with:
          script: |
            const allReleases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            if (allReleases.data.length === 0) {
              core.info('No previous releases found');
              core.setOutput('tag_name', '');
              return;
            }
            const latestRelease = allReleases.data[0];
            const tagName = latestRelease.tag_name;
            core.info(`Latest release tag name: ${tagName}`);
            const sanitizedTagName = tagName.replace(/[^0-9.]/g, '');
            core.info(`version to update: ${sanitizedTagName}`);
            core.setOutput('tag_name', sanitizedTagName);

      - name: Update project version
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          VERSION=${{ steps.get-latest-release.outputs.tag_name }}
          echo "Updating version to $VERSION"
          if [ -n "$VERSION" ]; then
            poetry version $VERSION
          fi

      - name: Update main branch with the new version
        run: |
          git checkout main
          if git diff --quiet pyproject.toml; then
            echo "No hay cambios en pyproject.toml. No se realizará commit ni push."
          else
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            git add pyproject.toml
            git commit -m "chore: Actualización de versión a ${{ steps.get-latest-release.outputs.tag_name }}"
            git push -f origin main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
